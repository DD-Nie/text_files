========================================================================================================================================================================
linux系统中/sbin目录用来存放用于管理员使用的存储二进制系统程序文件。因为其中的大部分文件多是系统管理员使用的基本的系统程序，所以虽然普通用户必要且允许时可以使用，但一般不给普通用户使用。
linux根目录下各文件夹的作用
/bin二进制可执行命令
/dev设备特殊文件
/etc系统管理和配置文件
/etc/rc.d启动的配置文件和脚本
/home用户主目录的基点，比如用户user的主目录就是/home/user，可以用~user表示
/lib标准程序设计库，又叫动态链接共享库，作用类似windows里的.dll文件
/sbin系统管理命令，这里存放的是系统管理员使用的管理程序
/tmp公用的临时文件存储点
/root系统管理员的主目录
/mnt系统提供这个目录是让用户临时挂载其他的文件系统。
/lost+found这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里
/proc虚拟的目录，是系统内存的映射。可直接访问这个目录来获取系统信息。
/var某些大文件的溢出区，比方说各种服务的日志文件
/usr最庞大的目录，要用到的应用程序和文件几乎都在这个目录。其中包含：
/usr/x11r6存放xwindow的目录
/usr/bin众多的应用程序
/usr/sbin超级用户的一些管理程序
/usr/doclinux文档
/usr/includelinux下开发和编译应用程序所需要的头文件
/usr/lib常用的动态链接库和软件包的配置文件
/usr/man帮助文档
/usr/src源代码，linux内核的源代码就放在/usr/src/linux里
/usr/local/bin本地增加的命令
/usr/local/lib本地增加的库根文件系统
通常情况下，根文件系统所占空间一般应该比较小，因为其中的绝大部分文件都不需要
经常改动，而且包括严格的文件和一个小的不经常改变的文件系统不容易损坏。
除了可能的一个叫/vmlinuz标准的系统引导映像之外，根目录一般不含任何文件。所有
其他文件在根文件系统的子目录中。
1./bin目录
/bin目录包含了引导启动所需的命令或普通用户可能用的命令(可能在引导启动后)。这些
命令都是二进制文件的可执行程序(bin是binary二进制的简称)，多是系统中重要的系统文件。
2./sbin目录
/sbin目录类似/bin，也用于存储二进制文件。因为其中的大部分文件多是系统管理员使
用的基本的系统程序，所以虽然普通用户必要且允许时可以使用，但一般不给普通用户使用。
3./etc目录
/etc目录存放着各种系统配置文件，其中包括了用户信息文件/etc/passwd，系统初始化文件/etc/rc等。linux正是*这些文件才得以正常地运行。
4./root目录
/root目录是超级用户的目录。
5./lib目录
/lib目录是根文件系统上的程序所需的共享库，存放了根文件系统程序运行所需的共享文
件。这些文件包含了可被许多程序共享的代码，以避免每个程序都包含有相同的子程序的副本，故可以使得可执行文件变得更小，节省空间。
6./lib/modules目录
/lib/modules目录包含系统核心可加载各种模块，尤其是那些在恢复损坏的系统时重新引
导系统所需的模块(例如网络和文件系统驱动)。
7./dev目录
/dev目录存放了设备文件，即设备驱动程序，用户通过这些文件访问外部设备。比如，用
户可以通过访问/dev/mouse来访问鼠标的输入，就像访问其他文件一样。
8./tmp目录
/tmp目录存放程序在运行时产生的信息和数据。但在引导启动后，运行的程序最好使用
/var/tmp来代替/tmp，因为前者可能拥有一个更大的磁盘空间。
9./boot目录
/boot目录存放引导加载器(bootstraploader)使用的文件，如lilo，核心映像也经常放在这里，而不是放在根目录中。但是如果有许多核心映像，这个目录就可能变得很大，这时使用单独的文件系统会更好一些。还有一点要注意的是，要确保核心映像必须在ide硬盘的前1024柱面内。
10./mnt目录
/mnt目录是系统管理员临时安装(mount)文件系统的安装点。程序并不自动支持安装到
/mnt。/mnt下面可以分为许多子目录，例如/mnt/dosa可能是使用msdos文件系统的软驱，而/mnt/exta可能是使用ext2文件系统的软驱，/mnt/cdrom光驱等等。
11./proc,/usr,/var,/home目录
其他文件系统的安装点。







========================================================================================================================================================================
Linux各目录代表的含义及bin /sbin /usr/bin /usr/sbin 区别
}         /bin 该目录中存放Linux的常用命令
}         /boot 该目录下存放的都是系统启动时要用到的程序
}         /dev 该目录包含了Linux系统中使用的所有外部设备，它实际上是访问这些外部设备的端口，你可以访问这些外部设备，与访问一个文件或一个目录没有区别
}         /sbin该目录用来存放系统管理员的系统管理程序
}         /usr 用户应用程序和文件都存放在该目录下
}         /etc该目录存放了系统管理时要用到的各种配置文件和子目录，例如网络配置文件、文件系统等。
}         /home 用来存放该用户的主目录
}         /lib 该目录用来存放系统动态连接共享库，几乎所有的应用程序都会用到该目录下的共享库
}         /tmp 用来存放不同程序执行时产生的临时文件
}         /lost+found 该目录在大多数情况下都是空的。但当突然停电、或者非正常关机后，有些文件就临时存放在这里。
}         /mnt 该目录在一般情况下也是空的，你可以临时将别的文件系统挂在该目录下
}         proc 可以在该目录下获取系统信息，这些信息是在内存中由系统自己产生的
}         /root 超级用户的主目录
}         /sys sys文件系统
}         /proc proc文件系统
ü       /etc/：
ü       /etc/rc.d/init.d/：
/usr/bin：
ü       /bin：
ü       /usr/sbin：
ü       /sbin：
ü       /var/log
  从命令功能来看，/sbin 下的命令属于基本的系统命令，如shutdown，reboot，用于启动系统，修复系统，/bin下存放一些普通的基本命令，如ls,chmod等，这些命令在Linux系统里的配置文件脚本里经常用到。
    从用户权限的角度看，/sbin目录下的命令通常只有管理员才可以运行，/bin下的命令管理员和一般的用户都可以使用。

    从可运行时间角度看，/sbin,/bin能够在挂载其他文件系统前就可以使用。

   而/usr/bin,/usr/sbin与/sbin /bin目录的区别在于：

    /bin,/sbin目录是在系统启动后挂载到根文件系统中的，所以/sbin,/bin目录必须和根文件系统在同一分区；

    /usr/bin,usr/sbin可以和根文件系统不在一个分区。

    /usr/sbin存放的一些非必须的系统命令；/usr/bin存放一些用户命令，如led(控制LED灯的)。

    转下一位网友的解读，个人认为诠释得很到位：

    /bin是系统的一些指令。bin为binary的简写主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。
    /sbin一般是指超级用户指令。主要放置一些系统管理的必备程式例如:cfdisk、dhcpcd、dump、e2fsck、fdisk、halt、ifconfig、ifup、 ifdown、init、insmod、lilo、lsmod、mke2fs、modprobe、quotacheck、reboot、rmmod、 runlevel、shutdown等。
    /usr/bin　是你在后期安装的一些软件的运行脚本。主要放置一些应用软体工具的必备执行档例如c++、g++、gcc、chdrv、diff、dig、du、eject、elm、free、gnome*、 gzip、htpasswd、kfm、ktop、last、less、locale、m4、make、man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb*、wget等。

    /usr/sbin   放置一些用户安装的系统管理的必备程式例如:dhcpd、httpd、imap、in.*d、inetd、lpd、named、netconfig、nmbd、samba、sendmail、squid、swap、tcpd、tcpdump等。
    如果新装的系统，运行一些很正常的诸如：shutdown，fdisk的命令时，悍然提示：bash:command not found。那么
    首先就要考虑root 的$PATH里是否已经包含了这些环境变量。
    可以查看PATH，如果是：PATH=$PATH:$HOME/bin则需要添加成如下：
    PATH=$PATH:$HOME/bin:/sbin:/usr/bin:/usr/sbin







========================================================================================================================================================================
ln 命令
这是Linux中一个非常重要命令，请大家一定要熟悉。它的功能是为某一个文件或目录在另外一个位置建立一个同步的链接，类似Windows下的超级链接。

这个命令最常用的参数是-s，具体用法是：
sudo ln -s 源文件 目标文件 

举例：

当前目录是/local，而我经常要访问/usr/local/linux/work

那么我就可以使用在local下建立一个文件linkwork，

然后sudo ln -s /usr/local/linux/work  /local/linkwork

即建立两者之间的链接。

 

删除链接

rm -rf   symbolic_name   注意不是rm -rf   symbolic_name/ 
那么上面我就是rm -rf   /local/linkwork
 

链接有两种，一种被称为硬链接（Hard Link），另一种被称为符号链接（Symbolic Link）。建立硬链接时，链接文件和被链接文件必须位于同一个文件系统中，并且不能建立指向目录的硬链接。而对符号链接，则不存在这个问题。默认情况下，ln产生硬链接。
　　在硬链接的情况下，参数中的“目标”被链接至[链接名]。如果[链接名]是一个目录名，系统将在该目录之下建立一个或多个与“目标”同名的链接文件，链接文件和被链接文件的内容完全相同。如果[链接名]为一个文件，用户将被告知该文件已存在且不进行链接。如果指定了多个“目标”参数，那么最后一个参数必须为目录。
　　如果给ln命令加上- s选项，则建立符号链接。如果[链接名]已经存在但不是目录，将不做链接。[链接名]可以是任何一个文件名（可包含路径），也可以是一个目录，并且允许它与“目标”不在同一个文件系统中。如果[链接名]是一个已经存在的目录，系统将在该目录下建立一个或多个与“目标”同名的文件，此新建的文件实际上是指向原“目标”的符号链接文件。
========================================================================================================================================================================



